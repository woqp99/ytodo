{"version":3,"sources":["components/AddTodo.js","components/TodoList.js","App.js","index.js"],"names":["AddTodo","method","onSubmit","e","preventDefault","target","todo","value","alert","this","props","reset","bind","class","type","name","placeholder","Component","TodoList","MouseHover","Modify","Delete","inputFormHandler","state","pre","text","setState","onHover","dataset","id","completed","ishover","onModify","onDelete","lists","data","i","length","isCom","Completed","mode","push","className","isHover","onMouseEnter","onMouseLeave","onClick","mtodo","onChange","App","max_content_id","contents","_article","_list","_todo","_contents","concat","_id","_Completed","_isHover","_mode","cts","exam","Number","_class","window","confirm","Array","from","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e4da2fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddTodo extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <form method=\"post\"\r\n                onSubmit={function (e) {\r\n                    e.preventDefault();\r\n                    if(e.target.todo.value==\"\"){\r\n                        alert(\"입력해주세요!\");\r\n                    }else{\r\n                        this.props.onSubmit(e.target.todo.value);\r\n                        e.target.reset()\r\n                    }\r\n                    \r\n                }.bind(this)}>\r\n                <div class=\"add todo_text\">\r\n                    <input class=\"todo-text\" type=\"text\" name=\"todo\" placeholder=\"Todo\"></input>\r\n\r\n                    <input type=\"submit\" class=\"todo-submit\" value=\"추가\" ></input>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React, { Component } from 'react';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.MouseHover = this.MouseHover.bind(this);\r\n        this.Modify = this.Modify.bind(this);\r\n        this.Delete = this.Delete.bind(this);\r\n        this.inputFormHandler = this.inputFormHandler.bind(this);\r\n        this.state = {\r\n            pre: this.props.text\r\n        }\r\n    }\r\n\r\n    inputFormHandler(e) {\r\n        \r\n        //this.setState({ [e.target.name] : e.target.value });\r\n        this.setState({ pre : e.target.value });\r\n    }\r\n\r\n    MouseHover(e) {\r\n        e.preventDefault();\r\n        this.props.onHover(e.target.dataset.id, e.target.dataset.todo, e.target.dataset.completed, e.target.dataset.ishover, \"read\");\r\n    }\r\n\r\n    Modify(e) {\r\n        e.preventDefault();\r\n        this.props.onModify(e.target.dataset.id, e.target.dataset.todo,\r\n            e.target.dataset.completed, e.target.dataset.ishover, 'none-content');\r\n            this.setState({ pre : this.props.text });\r\n    }\r\n\r\n    Delete(e) {\r\n        e.preventDefault();\r\n        this.props.onDelete(e.target.dataset.id, e.target.dataset.todo,\r\n            e.target.dataset.completed, e.target.dataset.ishover);\r\n    }\r\n\r\n    render() {\r\n        var lists = [];\r\n        var data = this.props.data;\r\n        var i = 0;\r\n        while (i < data.length) {\r\n            var isCom = (data[i].Completed === '1') ? \"com\" : \"nCom\";\r\n\r\n            /*      read       */\r\n            if (data[i].mode === 'read') {\r\n                \r\n                lists.push(\r\n                    <li className={i} key={data[i].id} data-id={data[i].id} data-todo={data[i].todo}\r\n                        data-completed={data[i].Completed} data-ishover={data[i].isHover}\r\n                        onMouseEnter={this.MouseHover} onMouseLeave={this.MouseHover}>\r\n\r\n                        <p data-id={data[i].id} data-todo={data[i].todo} data-completed={data[i].Completed} data-ishover={data[i].isHover}\r\n                            className={isCom} onClick={function (e) {\r\n                                e.preventDefault();\r\n\r\n                                this.props.onClick(e.target.dataset.id, e.target.dataset.todo, e.target.dataset.completed, e.target.dataset.ishover, \"read\");\r\n                            }.bind(this)}\r\n                        >{data[i].todo}</p>\r\n\r\n                        <div class=\"btn\">\r\n                            <div>\r\n                                <button className={data[i].isHover === \"1\" ? \"list-hover1\": \"list-leave1\"}\r\n                                    data-id={data[i].id} data-todo={data[i].todo} data-completed={data[i].Completed} data-ishover={data[i].isHover}\r\n                                    onClick={this.Modify}>수정</button>\r\n                            </div>\r\n                            <div>\r\n                                <button className={data[i].isHover === \"1\" ? \"list-hover2\": \"list-leave2\"}\r\n                                data-id={data[i].id} data-todo={data[i].todo} data-completed={data[i].Completed} data-ishover={data[i].isHover}\r\n                                    onClick={this.Delete}>삭제</button>\r\n                            </div>\r\n                        </div>\r\n                    </li>)\r\n\r\n            /*      update       */\r\n            } else if (data[i].mode === 'update') {\r\n                \r\n                lists.push(\r\n                    <li className='ModiMode' key={data[i].id}>\r\n                        <form method=\"post\" data-id={data[i].id} data-completed={data[i].Completed} data-ishover={data[i].isHover}\r\n                            onSubmit={function (e) {\r\n                                e.preventDefault();\r\n                                if (e.target.mtodo.value == \"\") {\r\n                                    alert(\"입력해주세요!\");\r\n                                } else {\r\n                                    this.props.onSubmit(e.target.dataset.id, e.target.mtodo.value, e.target.dataset.completed, e.target.dataset.ishover);\r\n                                    \r\n                                }\r\n\r\n                            }.bind(this)}>\r\n                            <div className=\"UDbtn\">\r\n                                <input type=\"text\" name=\"mtodo\" className=\"modi\" value={this.state.pre} onChange={this.inputFormHandler}></input>\r\n                                <input type=\"submit\" value=\"수정\" className=\"modi\"></input>\r\n                            </div>\r\n                        </form>\r\n                    </li>\r\n                )\r\n            }\r\n            i = i + 1;\r\n        } \r\n\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    {lists}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component, createContext, useState } from 'react';\nimport AddTodo from './components/AddTodo'\nimport TodoList from './components/TodoList'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 0;\n    this.state = {\n      contents: [],\n      text: '',\n      class: 'content'\n    }\n  }\n\n\n  render() {\n\n    var _article = null, _list = null;\n\n\n    _article = <AddTodo onSubmit={function (_todo) {\n      this.max_content_id += 1;\n      var _contents = this.state.contents.concat({\n        id: this.max_content_id,\n        todo: _todo,\n        Completed: '0',\n        isHover: '0',\n        mode: 'read'\n      })\n\n      this.setState({\n        contents: _contents\n      })\n\n    }.bind(this)} ></AddTodo>\n\n    _list = <TodoList data={this.state.contents} text={this.state.text} onClick={function (_id, _todo, _Completed, _isHover, _mode) {\n      var i = 0;\n      var cts = this.state.contents;\n      var exam = _todo;\n      while (i < cts.length) {\n        if (Number(cts[i].id) === Number(_id)) {\n          (_Completed == \"0\") ? _Completed = '1' : _Completed = '0';\n          cts[i] = { id: _id, todo: _todo, Completed: _Completed, isHover: _isHover, mode: _mode };\n          break;\n        }\n        i += 1;\n      }\n      this.setState({\n        contents: cts,\n        text: exam\n      })\n\n    }.bind(this)}\n\n      onHover={function (_id, _todo, _Completed, _isHover, _mode) {\n        var i = 0;\n        var cts = this.state.contents;\n        var exam = _todo;\n        while (i < cts.length) {\n          if (Number(cts[i].id) === Number(_id)) {\n            (_isHover == \"0\") ? _isHover = '1' : _isHover = '0';\n            cts[i] = { id: _id, todo: _todo, Completed: _Completed, isHover: _isHover, mode: _mode };\n            break;\n          }\n          i += 1;\n        }\n        this.setState({\n          contents: cts,\n          text: exam\n        })\n      }.bind(this)}\n\n      onModify={function (_id, _todo, _Completed, _isHover, _class) {\n        var i = 0;\n        var cts = this.state.contents;\n        while (i < cts.length) {\n          if (cts[i].mode === 'update') {\n            cts[i] = { id: cts[i].id, todo: cts[i].todo, Completed: cts[i].Completed, isHover: \"0\", mode: \"read\" };\n          }\n            if (Number(cts[i].id) === Number(_id)) {\n              cts[i] = { id: _id, todo: _todo, Completed: _Completed, isHover: \"1\", mode: \"update\" };\n              //break;\n            } \n              \n          \n          i += 1;\n        }\n        this.setState({\n          class: _class\n        })\n      }.bind(this)}\n\n      onSubmit={function (_id, _todo, _Completed, _isHover) {\n        var i = 0;\n        var cts = this.state.contents;\n        while (i < cts.length) {\n          if (Number(cts[i].id) === Number(_id)) {\n            cts[i] = { id: _id, todo: _todo, Completed: _Completed, isHover: \"1\", mode: \"read\" };\n            break;\n          }\n          i += 1;\n        }\n        this.setState({\n          contents: cts\n        })\n      }.bind(this)}\n\n      onDelete={function (_id, _todo, _Completed, _isHover) {\n        if(window.confirm('삭제하시겠습니까?')){\n        var i = 0;\n        var cts = Array.from(this.state.contents);\n        while (i < cts.length) {\n          if (Number(cts[i].id) === Number(_id)) {\n            cts.splice(i, 1);\n            break;\n          }\n          i += 1;\n        }\n        this.setState({\n          contents: cts\n        })\n      }\n      }.bind(this)}\n    ></TodoList>\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrap\">\n        {_article}\n          <div className=\"content\">\n            {_list}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}